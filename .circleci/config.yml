version: 2
jobs:
  build:
    working_directory: ~/go/src/github.com/transcom/mymove
    docker:
      - image: trussworks/circleci-docker-primary:49e04ed364985ca83145d9336b0cb82ba599ebe0
      - image: postgres:latest
        environment:
          - POSTGRES_PASSWORD: mysecretpassword
          - POSTGRES_DB: test_db
    steps:
      - checkout
      - setup_remote_docker
      - run: bin/install-dependencies.sh
      - run: echo 'export PATH=${PATH}:~/go/bin' >> $BASH_ENV
      - run: make deps
      - restore_cache:
          keys:
            - pre-commit-dot-cache-{{ checksum ".pre-commit-config.yaml" }}
      - run:
          name: Run pre-commit tests
          command: pre-commit run --all-files
      - save_cache:
          key: pre-commit-dot-cache-{{ checksum ".pre-commit-config.yaml" }}
          paths:
            - ~/.cache/pre-commit
      - run: make client_build
      - run: make client_test
      - run: make server_test
      - run: make server_build_docker
      - run:
          name: Tag and push image
          command: |
            bash -c "$(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)"
            docker tag ppp:dev ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/app:${CIRCLE_SHA1}
            docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/app:${CIRCLE_SHA1}

  deploy:
    docker:
      - image: trussworks/circleci-docker-primary:49e04ed364985ca83145d9336b0cb82ba599ebe0
    steps:
      - checkout
      - setup_remote_docker
      - deploy:
          name: Deploy demo site
          command: |
            bash -c "$(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)"
            ecs-deploy -c app-staging -n app -t 300 -i ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/app:${CIRCLE_SHA1}

workflows:
  version: 2
  pipeline:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
